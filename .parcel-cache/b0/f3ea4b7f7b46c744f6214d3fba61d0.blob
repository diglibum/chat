var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _get = require('./get');
var _getDefault = _parcelHelpers.interopDefault(_get);
class Templator {
  TEMPLATE_REGEXP = /\{\{(.*?)\}\}/gi;
  IF_TEMPLATE_REGEXP = /\{\{.*#if(.*?)\}\}(.*?)\{\{.*#endif.*?\}\}/gi;
  constructor(template) {
    this._template = template;
  }
  compile(ctx) {
    return this._compileTemplate(ctx);
  }
  _compileTemplate = ctx => {
    let tmpl = this._template;
    let key = null;
    const regExp = this.TEMPLATE_REGEXP;
    // Важно делать exec именно через константу, иначе уйдёте в бесконечный цикл
    while (key = regExp.exec(tmpl)) {
      if (key[1]) {
        const tmplValue = key[1].trim();
        console.log(tmplValue);
        console.log(tmplValue.slice(0, 3));
        // get — функция, написанная ранее в уроке
        const data = _getDefault.default(ctx, tmplValue);
        tmpl = tmpl.replace(new RegExp(key[0], "gi"), data);
      }
    }
    return tmpl;
  };
}
exports.default = Templator;
